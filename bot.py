import os
import logging
import typing
import re

from dotenv import load_dotenv
from aiogram import Bot, Dispatcher, executor, types, filters


# Load API key from .env file
load_dotenv()

API_TOKEN = os.getenv("API_TOKEN")


# Configure logging
logging.basicConfig(level=logging.INFO)

# Initialize bot and dispatcher
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)


information = {

    "help": 
"""
–ë–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤.

–≠—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è –ø–æ–º–æ—â–∏ —Å—Ç—É–¥–µ–Ω—Ç–∞–º –¢—é–º–ì—É –≤ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏–∏ –≤–Ω—É—Ç—Ä–∏ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞.

–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:
/start  - –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
/map    - –í—ã–≤–æ–¥ –∫–∞—Ä—Ç—ã –¢—é–º–ì—É 
""",

    "contacts":
    """
–ö–æ–Ω—Ç–∞–∫—Ç—ã:
–ï–¥–∏–Ω—ã–π –¥–µ–∫–∞–Ω–∞—Ç
    """,
    
    "ulk-1": 
"""
üè¢–£–õ–ö-01 (–ò–§–∏–ñ)
–ê–¥—Ä–µ—Å: –£–ª. –†–µ—Å–ø—É–±–ª–∏–∫–∏, 9

–ò–Ω—Å—Ç–∏—Ç—É—Ç —Å–æ—Ü–∏–∞–ª—å–Ω–æ-–≥—É–º–∞–Ω–∏—Ç–∞—Ä–Ω—ã—Ö –Ω–∞—É–∫
–¢–µ–ª–µ—Ñ–æ–Ω: 59-74-39
–ì—Ä—É–ø–ø–∞ –í–ö: https://vk.com/csi_ipip
""",

    "ulk-3":
"""
üè¢–£–õ–ö-03 (–ò–Ω–ó–µ–º)
–ê–¥—Ä–µ—Å: –£–ª. –û—Å–∏–ø–µ–Ω–∫–æ, 2

–ò–Ω—Å—Ç–∏—Ç—É—Ç –Ω–∞—É–∫ –æ –ó–µ–º–ª–µ
–¢–µ–ª–µ—Ñ–æ–Ω: 59-74-91
–ì—Ä—É–ø–ø–∞ –í–ö: https://vk.com/inzemutmn
""",

"ulk-4":
"""
üè¢–£–õ–ö-04 (–§–≠–ò)
–ê–¥—Ä–µ—Å: –£–ª. –õ–µ–Ω–∏–Ω–∞, 16

–§–∏–Ω–∞–Ω—Å–æ–≤–æ-—ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–π –∏–Ω—Å—Ç–∏—Ç—É—Ç
–¢–µ–ª–µ—Ñ–æ–Ω: 59-74-97
–ì—Ä—É–ø–ø–∞ –í–ö: https://vk.com/fei_media
""",

"ulk-5":
"""
üè¢–£–õ–ö-05 (–ò–Ω–•–∏–º/–§–¢–ò/–ò–ú–∏–ö–ù)
–ê–¥—Ä–µ—Å: –£–ª. –ü–µ—Ä–µ–∫–æ–ø—Å–∫–∞—è, 15–∞

–ò–Ω—Å—Ç–∏—Ç—É—Ç —Ö–∏–º–∏–∏
–¢–µ–ª–µ—Ñ–æ–Ω: 59-74-67 


–§–∏–∑–∏–∫–æ-—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∏–Ω—Å—Ç–∏—Ç—É—Ç
–¢–µ–ª–µ—Ñ–æ–Ω: 59-74-70 
–ì—Ä—É–ø–ø–∞ –í–ö: https://vk.com/ifikh


–ò–Ω—Å—Ç–∏—Ç—É—Ç –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏ –∏ –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã—Ö –Ω–∞—É–∫
–¢–µ–ª–µ—Ñ–æ–Ω: 59-77-40
–ì—Ä—É–ø–ø–∞ –í–ö: https://vk.com/utmn_imikn
""",

"ulk-6":
"""
üè¢–£–õ–ö-06 (–ò–Ω–ë–∏–æ)
–ê–¥—Ä–µ—Å: –£–ª. –ü–∏—Ä–æ–≥–æ–≤–∞, 3

–ò–Ω—Å—Ç–∏—Ç—É—Ç –±–∏–æ–ª–æ–≥–∏–∏
–¢–µ–ª–µ—Ñ–æ–Ω: 59-74-94
–ì—Ä—É–ø–ø–∞ –í–ö: https://vk.com/utmn_inbio
""",

"ulk-7":
"""
üè¢–£–õ–ö-07 (–ò–§–ö)
–ê–¥—Ä–µ—Å: –£–ª. –ü—Ä–∂–µ–≤–∞–ª—å—Å–∫–æ–≥–æ, 37

–ò–Ω—Å—Ç–∏—Ç—É—Ç —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π –∫—É–ª—å—Ç—É—Ä—ã.
–°–ö-—Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–π –∫–æ—Ä–ø—É—Å.(–∫–æ—Ä–ø—É—Å-1,2) 
–¢–µ–ª–µ—Ñ–æ–Ω—ã: 41-38-88, 41-80-16
–ì—Ä—É–ø–ø–∞ –í–ö: https://vk.com/ifk.utmn
""",

"ulk-9":
"""
üè¢–£–õ–ö-09
–ê–¥—Ä–µ—Å—Å: –£–ª. –õ–µ–Ω–∏–Ω–∞, 6

–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–π –æ–∑–¥–æ—Ä–æ–≤–∏—Ç–µ–ª—å–Ω—ã–π –∫–æ—Ä–ø—É—Å
""",

"ulk-10":
"""
üè¢–£–õ–ö-10 (–ò–ì–∏–ü)
–ê–¥—Ä–µ—Å—Å: –£–ª. –õ–µ–Ω–∏–Ω–∞, 38

–ò–Ω—Å—Ç–∏—Ç—É—Ç –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–∞ –∏ –ø—Ä–∞–≤–∞
–¢–µ–ª–µ—Ñ–æ–Ω: 59-74-43
–ì—Ä—É–ø–ø–∞ –í–ö: https://vk.com/igipgip

üè¢–£–õ–ö-10/–¢9
–ê–¥—Ä–µ—Å—Å: —É–ª. –¢—É—Ä–≥–µ–Ω–µ–≤–∞,9

üè¢–£–õ–ö-10/–†18
–ê–¥—Ä–µ—Å—Å: —É–ª. –†–µ—Å–ø—É–±–ª–∏–∫–∏,18
""",

"ulk-11":
"""
üè¢–£–õ–ö-11 (–°–æ—Ü–ì—É–º)
–ê–¥—Ä–µ—Å—Å: –£–ª. –õ–µ–Ω–∏–Ω–∞, 23

–ò–Ω—Å—Ç–∏—Ç—É—Ç –¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–Ω–æ–≥–æ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è

–ò–Ω—Å—Ç–∏—Ç—É—Ç —Å–æ—Ü–∏–∞–ª—å–Ω–æ-–≥—É–º–∞–Ω–∏—Ç–∞—Ä–Ω—ã—Ö –Ω–∞—É–∫
–¢–µ–ª–µ—Ñ–æ–Ω: 59-76-79
https://vk.com/socgum_utmn
""",

"ulk-12":
"""
üè¢–£–õ–ö-12
–ê–¥—Ä–µ—Å—Å: –£–ª. –°–µ–º–∞–∫–æ–≤–∞, 18

–ë–∏–±–ª–∏–æ—Ç–µ—á–Ω–æ‚Äì–º—É–∑–µ–π–Ω—ã–π –∫–æ–º–ø–ª–µ–∫—Å
–¢–µ–ª–µ—Ñ–æ–Ω: 45-63-09
""",

"ulk-13":
"""
üè¢–£–õ–ö-13
–ê–¥—Ä–µ—Å—Å: –£–ª. –ë–∞—Ä–Ω–∞—É–ª—å—Å–∫–∞—è, 4

–¶–í–ó–° –¶–µ–Ω—Ç—Ä –∑–∏–º–Ω–∏—Ö –≤–∏–¥–æ–≤ —Å–ø–æ—Ä—Ç–∞
–¢–µ–ª–µ—Ñ–æ–Ω: 43-45-62
""",

"ulk-16":
"""
üè¢–£–õ–ö-16 (–ò–ü–∏–ø)
–ê–¥—Ä–µ—Å—Å: –£–ª. –ü—Ä–æ–µ–∑–¥ 9 –ú–∞—è, 5

–ò–Ω—Å—Ç–∏—Ç—É—Ç –ø—Å–∏—Ö–æ–ª–æ–≥–∏–∏ –∏ –ø–µ–¥–∞–≥–æ–≥–∏–∫–∏
–¢–µ–ª–µ—Ñ–æ–Ω: 59-75-81
–ì—Ä—É–ø–ø–∞ –í–ö: https://vk.com/csi_ipip
""",

"ulk-17":
"""
üè¢–£–õ–ö-17 (X-BIO)
–ê–¥—Ä–µ—Å—Å: –£–ª. –í–æ–ª–æ–¥–∞—Ä—Å–∫–æ–≥–æ 6

–ò–Ω—Å—Ç–∏—Ç—É—Ç —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–π –∏ —Å–µ–ª—å—Å–∫–æ—Ö–æ–∑—è–π—Å—Ç–≤–µ–Ω–Ω–æ–π –±–∏–æ–ª–æ–≥–∏–∏
–¢–µ–ª–µ—Ñ–æ–Ω: 59-74-00
""", 

"ulk-19":
"""
üè¢–£–õ–ö-19 (–®–ü–ò)
–ê–¥—Ä–µ—Å—Å: –£–ª. 8 –º–∞—Ä—Ç–∞ 2/1

–®–∫–æ–ª–∞ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–Ω—ã—Ö –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π
–¢–µ–ª–µ—Ñ–æ–Ω: 59-76-58

–ü–æ–ª–∏—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è —à–∫–æ–ª–∞
–¢–µ–ª–µ—Ñ–æ–Ω: 59-74-00
"""
}


def start_keyboard():
    
    buttons = [
        types.InlineKeyboardButton(text="–ö–æ—Ä–ø—É—Å–∞", callback_data="campus"),
        types.InlineKeyboardButton(text="–ö–æ–Ω—Ç–∞–∫—Ç—ã" , callback_data="contacts")
    ]
    
    keyboard = types.InlineKeyboardMarkup(row_width=2)
    keyboard.add(*buttons)
    
    return keyboard


def campus_keyboard():
    
    buttons = [
        types.InlineKeyboardButton(text="–£–õ–ö-1", callback_data="ulk-1"),
        types.InlineKeyboardButton(text="–£–õ–ö-3", callback_data="ulk-3"),
        types.InlineKeyboardButton(text="–£–õ–ö-4", callback_data="ulk-4"),
        types.InlineKeyboardButton(text="–£–õ–ö-5", callback_data="ulk-5"),
        types.InlineKeyboardButton(text="–£–õ–ö-6", callback_data="ulk-6"),
        types.InlineKeyboardButton(text="–£–õ–ö-7", callback_data="ulk-7"),
        types.InlineKeyboardButton(text="–£–õ–ö-9", callback_data="ulk-9"),
        types.InlineKeyboardButton(text="–£–õ–ö-10", callback_data="ulk-10"),
        types.InlineKeyboardButton(text="–£–õ–ö-11", callback_data="ulk-11"),
        types.InlineKeyboardButton(text="–£–õ–ö-12", callback_data="ulk-12"),
        types.InlineKeyboardButton(text="–£–õ–ö-13", callback_data="ulk-13"),
        types.InlineKeyboardButton(text="–£–õ–ö-16", callback_data="ulk-16"),
        types.InlineKeyboardButton(text="–£–õ–ö-17", callback_data="ulk-17"),
        types.InlineKeyboardButton(text="–£–õ–ö-19", callback_data="ulk-19"),
        types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="start_menu")
    ]
    
    keyboard = types.InlineKeyboardMarkup(row_width=1)
    keyboard.add(*buttons)

    return keyboard


def go_back_keyboard(point):
    
    button = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data=point)

    keyboard = types.InlineKeyboardMarkup(row_width=1)
    keyboard.add(button)
    
    return keyboard


@dp.message_handler(commands="help")
async def send_welcome(message: types.Message):

    await message.answer(information["help"])


@dp.message_handler(content_types=["sticker"])
async def send_welcome(message: types.Message):

    await message.answer_sticker(sticker="https://raw.githubusercontent.com/TelegramBots/book/master/src/docs/sticker-fred.webp")


@dp.message_handler(commands="start")
async def start_command(message: types.Message):

    await message.answer("–ö–∞–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å?", reply_markup=start_keyboard())


@dp.callback_query_handler(text="start_menu")
async def start_menu(call: types.CallbackQuery):

    await call.message.edit_text("–ö–∞–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å?", reply_markup=start_keyboard())
    await call.answer()


@dp.callback_query_handler(text="campus")
async def send_campus_buttons(call: types.CallbackQuery):

    await call.message.edit_text("–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ—Ä–ø—É—Å", reply_markup=campus_keyboard())
    await call.answer()


@dp.callback_query_handler(text="contacts")
async def send_contacts(call: types.CallbackQuery):
    
    await call.message.edit_text(information["contacts"], reply_markup=go_back_keyboard("start_menu"))
    await call.answer()


@dp.message_handler(commands="map")
async def send_contacts(message: types.Message):
    
    media = types.InputFile("files/map.jpg")
    await message.answer_photo(media)


@dp.callback_query_handler(filters.Regexp(r'ulk-\d+'))
async def send_contacts(call: types.CallbackQuery):
    
    await call.message.edit_text(information[call.data], reply_markup=go_back_keyboard("campus"), disable_web_page_preview=True)
    await call.answer()


if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
